diff -uNr dependency-track-4.11.7.orig/src/main/java/org/dependencytrack/parser/trivy/model/Package.java dependency-track-4.11.7/src/main/java/org/dependencytrack/parser/trivy/model/Package.java
--- dependency-track-4.11.7.orig/src/main/java/org/dependencytrack/parser/trivy/model/Package.java	2024-10-01 16:57:47.511417646 +0900
+++ dependency-track-4.11.7/src/main/java/org/dependencytrack/parser/trivy/model/Package.java	2024-10-01 17:12:53.120603890 +0900
@@ -37,6 +37,16 @@
     private String[] licenses;
     private OS layer;
 
+    // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+    // ### (1) Add a member "release", which corresponds to the component's release.
+    // ### (2) Add default constructor to avoid compilation error.
+    private String release;
+
+    public Package() {
+
+    }
+    // ###### [END]
+
     public Package(String name, String version, String arch, Integer epoch, String srcName, String srcVersion, String srcRelease) {
 
         this.name = name;
@@ -53,5 +63,24 @@
         this.layer = new OS();
     }
 
+    // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+    // ### (1) Add a constructor with "release" in addition to the original contructor.
+    public Package(String name, String version, String release, String arch, Integer epoch, String srcName, String srcVersion, String srcRelease) {
+
+        this.name = name;
+        this.version = version;
+        this.release = release;
+        this.arch = arch;
+        this.epoch = epoch;
+ 
+        this.srcName = (srcName == null) ? name : srcName;
+        this.srcVersion = (srcVersion == null) ? version : srcVersion;
+        this.srcEpoch = epoch;
+        this.srcRelease = srcRelease;
+
+        this.licenses = new String[] {};
+        this.layer = new OS();
+    }
+    // ###### [END]
+}
 
-}
\ ファイル末尾に改行がありません
diff -uNr dependency-track-4.11.7.orig/src/main/java/org/dependencytrack/tasks/scanners/TrivyAnalysisTask.java dependency-track-4.11.7/src/main/java/org/dependencytrack/tasks/scanners/TrivyAnalysisTask.java
--- dependency-track-4.11.7.orig/src/main/java/org/dependencytrack/tasks/scanners/TrivyAnalysisTask.java	2024-10-01 16:57:47.523418357 +0900
+++ dependency-track-4.11.7/src/main/java/org/dependencytrack/tasks/scanners/TrivyAnalysisTask.java	2024-10-01 17:10:20.848520865 +0900
@@ -206,6 +206,12 @@
 
         for (final Component component : components) {
             if (component.getPurl() != null) {
+                // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+                // ### (1) Set boolean if the component's type is "rpm" or "deb".
+                final boolean is_rpm = component.getPurl().getType().equals("rpm") ? true : false;
+                final boolean is_deb = component.getPurl().getType().equals("deb") ? true : false;
+                // ###### [END]
+
                 var appType = PurlType.getApp(component.getPurl().getType());
 
                 var name = component.getName();
@@ -217,7 +223,18 @@
                 if (!PurlType.UNKNOWN.getAppType().equals(appType)) {
                     if (!PurlType.Constants.PACKAGES.equals(appType)) {
                         final Application app = apps.computeIfAbsent(appType, Application::new);
-                        final String key = name + ":" + component.getVersion();
+                        // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+                        // ### (1) If there is a string that corresponds to "Epoch", remove it.
+                        // #   buf = "1:2.3.4-5.el9" -> buf = "2.3.4-5.el9"
+                        // ### (2) Concatenate with "Name".
+                        // #   vfinal String key = name + ":" + buf
+                        String buf = component.getVersion();
+                        if (is_rpm || is_deb) {
+                            buf = buf.contains(":") ? buf.split(":")[1] : buf;
+                        }
+                        final String key = name + ":" + buf;
+                        //final String key = name + ":" + component.getVersion();
+                        // ###### [END]
 
                         LOGGER.debug("Add key %s to map".formatted(key));
                         map.put(key, component);
@@ -272,12 +289,55 @@
                         final PackageInfo pkg = pkgs.computeIfAbsent(pkgType, ignored -> new PackageInfo());
 
                         versionKey += component.getVersion();
+                        // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+                        // ### (1) If there is a string that corresponds to "Epoch", remove it. 
+                        // #   versionKey = "1:2.3.4-5.el9" -> versionKey = "2.3.4-5.el9"
+                        if (is_rpm || is_deb) {
+                            if (versionKey.contains(":")) {
+                                int n_versionKey = versionKey.split(":").length;
+                                versionKey = versionKey.contains(":") ? versionKey.split(":")[n_versionKey - 1] : versionKey;
+                            }
+                        }
+                        // ###### [END]
                         final String key = name + ":" + versionKey;
 
                         LOGGER.debug("Add key %s to map".formatted(key));
                         map.put(key, component);
                         LOGGER.debug("add package %s".formatted(component.toString()));
-                        pkg.addPackage(new Package(component.getName(), component.getVersion(), arch != null ? arch : "x86_64", epoch, srcName, srcVersion, srcRelease));
+
+                        // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+                        // ### (1) If there is a string that corresponds to "Epoch", remove it. 
+                        // #   buf = "1:2.3.4-5.el9" -> buf = "2.3.4-5.el9"
+                        // ### (2) Then, split into "Version" and "Release" ("Release" can be NULL)
+                        // #   buf = "2.3.4-5.el9" -> version = "2.3.4", release = "5.el9"
+                        // #   (buf = "2.3.4" -> version = "2.3.4", release = "")
+                        // ### (3) Set package information, adding "Release" to it. 
+                        String version = "";
+                        String release = "";
+                        String buf = component.getVersion();
+                        buf = buf.contains(":") ? buf.split(":")[1] : buf;
+                        if (is_rpm || is_deb) {
+                            if (buf.contains("-")) {
+                                String[] buf2 = buf.split("-");
+                                release = buf2[buf2.length - 1];
+                                for (int i = 0; i < buf2.length - 1; i++) {
+                                    version += buf2[i];
+                                }
+                            }
+                            else {
+                                version = buf;
+                                release = "";
+                            }
+                        }
+
+                        if (is_rpm || is_deb) {
+                            pkg.addPackage(new Package(component.getName(), version != "" ? version : component.getVersion(), release != "" ? release : "", arch != null ? arch : "x86_64", epoch, srcName, srcVersion, srcRelease));
+                        }
+                        else {
+                            pkg.addPackage(new Package(component.getName(), component.getVersion(), arch != null ? arch : "x86_64", epoch, srcName, srcVersion, srcRelease));
+                        }
+                        //pkg.addPackage(new Package(component.getName(), component.getVersion(), arch != null ? arch : "x86_64", epoch, srcName, srcVersion, srcRelease));        
+                        // ###### [END]
                     }
                 }
 
@@ -338,7 +398,22 @@
         for (final Result result : input) {
             for (int idx = 0; idx < result.getVulnerabilities().length; idx++) {
                 var vulnerability = result.getVulnerabilities()[idx];
-                var key = vulnerability.getPkgName() + ":" + vulnerability.getInstalledVersion();
+                // ###### [START] Fix candidate of version handing for rpm (and deb ?)
+                // ### (1) If there is a string that corresponds to "Epoch", remove it. 
+                // #   buf = "1:2.3.4-5.el9" -> installed_version = "2.3.4-5.el9"
+                // ### (2) Concatenate "installed_version" with "Name".
+                // #   var key = vulnerability.getPkgName() + ":" + installed_version
+                //var key = vulnerability.getPkgName() + ":" + vulnerability.getInstalledVersion();
+                String buf = vulnerability.getInstalledVersion();
+                String installed_version = "";
+                if (buf.contains(":")) {
+                    installed_version = buf.split(":")[1];
+                }
+                else {
+                    installed_version = buf;
+                }
+                var key = vulnerability.getPkgName() + ":" + installed_version;
+                // ###### [END]
                 LOGGER.debug("Searching key %s in map".formatted(key));
                 if (!super.isEnabled(ConfigPropertyConstants.SCANNER_TRIVY_IGNORE_UNFIXED) || vulnerability.getStatus() == 3) {
                     handle(components.get(key), vulnerability);
